from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from datetime import date


class Buttons:
    description_btn = KeyboardButton(text="üìÉ –û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞")
    program_btn = KeyboardButton(text="üìÜ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞")
    buy_btn = KeyboardButton(text="üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å")
    back_to_courses_btn = KeyboardButton(text="‚¨Ö –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤")
    connect_to_chat = KeyboardButton(text="üí¨ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —á–∞—Ç—É")

    lesson_link_btn = KeyboardButton(text="üîâ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∑–∞–Ω—è—Ç–∏—é")
    lesson_video_btn = KeyboardButton(text="üé• –ó–∞–ø–∏—Å–∏ —É—Ä–æ–∫–æ–≤")
    student_list_btn = KeyboardButton(text="üë®‚Äçüéì –°–ø–∏—Å–æ–∫ —É—á–∞—â–∏—Ö—Å—è")
    check_homework_btn = KeyboardButton(text="üíå –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ")
    back_to_flow_btn = KeyboardButton(text="‚¨Ö –°–ø–∏—Å–æ–∫ –ø–æ—Ç–æ–∫–æ–≤")

    teacher_info_btn = KeyboardButton(text="üë®‚Äçüè´ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º")

    student_account_btn = KeyboardButton(text="üë®‚Äçüéì –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞")
    send_homework_btn = KeyboardButton(text="üì© –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")

    def __init__(self, db):
        self.db = db

    def get_courses_buttons(self, is_student=False):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        for course_name in self.db.get_courses_name():
            buttons.insert(KeyboardButton(text=course_name))
        if is_student:
            buttons.add(self.student_account_btn)
        return buttons

    def in_course(self, is_student):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons.insert(self.description_btn)
        buttons.insert(self.program_btn)
        buttons.insert(self.buy_btn)
        buttons.add(self.back_to_courses_btn)
        if is_student:
            buttons.add(self.student_account_btn)
        return buttons

    def get_confirm_and_reject(self, chat_id, course_id, student_id):
        buttons = InlineKeyboardMarkup(row_width=2)
        buttons.insert(
            InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"Buy|Accept|{chat_id}|{course_id}|{student_id}"))
        buttons.insert(
            InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"Buy|Reject|{chat_id}|{course_id}|{student_id}"))
        return buttons

    def get_buttons_after_payment(self):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons.insert(self.connect_to_chat)
        buttons.insert(self.back_to_courses_btn)
        return buttons

    def get_flow_for_teacher(self, id):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        for name, start_date, finish_date in self.db.get_further_flows_for_teacher(id):
            buttons.insert(KeyboardButton(text=f"{name} | {start_date} - {finish_date}"))
        return buttons

    def get_flow_for_student(self, id):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        for name, start_date, finish_date in self.db.get_current_flows_for_student(id):
            buttons.insert(KeyboardButton(text=f"{name} | {start_date} - {finish_date}"))
        buttons.insert(self.back_to_courses_btn)
        return buttons

    def in_flow_teacher(self):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons.insert(self.lesson_link_btn)
        buttons.insert(self.lesson_video_btn)
        buttons.insert(self.student_list_btn)
        buttons.insert(self.check_homework_btn)
        buttons.add(self.back_to_flow_btn)
        return buttons

    def in_flow_student(self):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons.insert(self.lesson_link_btn)
        buttons.insert(self.lesson_video_btn)
        buttons.insert(self.teacher_info_btn)
        buttons.insert(self.send_homework_btn)
        buttons.add(self.back_to_flow_btn)
        return buttons

    def get_students_names_in_flow(self, flow_id, topic):
        buttons = InlineKeyboardMarkup(row_width=1)
        for name, id in self.db.get_list_students_by_flow_id(flow_id):
            buttons.insert(InlineKeyboardButton(text=name, callback_data=f"{topic}|{id}"))
        return buttons

    def get_students_list_in_flow(self, flow_id):
        buttons = self.get_students_names_in_flow(flow_id, "Student")
        buttons.insert(InlineKeyboardButton(text="–°–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º", callback_data=f"SendAll|send"))
        return buttons

    def get_link_to_lesson(self, flow_id):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏", url=self.db.get_link_by_flow_id(flow_id)))
        return buttons

    def how_find_username(self):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton("–ö–∞–∫ —É–∑–Ω–∞—Ç—å –∫–∞–∫–æ–π –Ω–∏–∫?",
                                            url="https://ustanovkaos.ru/obshchenie/kak-uznat-svoj-nik-v-telegramme.html"))
        return buttons

    def edit_personal_info(self):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton("‚úè –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", callback_data="PersInfo|fio"))
        buttons.insert(InlineKeyboardButton("‚úè –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data="PersInfo|phone"))
        buttons.insert(InlineKeyboardButton("‚úè –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫", callback_data="PersInfo|username"))
        buttons.insert(InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="PersInfo|accept"))
        return buttons

    def edit_recording_info(self):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton("‚úè –ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å—å", callback_data="Record|video"))
        buttons.insert(InlineKeyboardButton("‚úè –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="Record|description"))
        buttons.insert(InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="Record|accept"))
        return buttons

    def edit_message(self, topic):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton("‚úè –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ", callback_data=f"{topic}|edit"))
        buttons.insert(InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"{topic}|accept"))
        return buttons

    def get_button_to_student_page(self):
        buttons = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons.insert(self.student_account_btn)
        return buttons

    def get_recorded_lessons(self, flow_id):
        buttons = InlineKeyboardMarkup(row_width=2)
        for lesson_number, id in self.db.get_id_recordings_by_flow_id(flow_id):
            buttons.insert(InlineKeyboardButton(text=f"–£—Ä–æ–∫ {lesson_number}", callback_data=f"RecLesson|{id}"))
        return buttons

    def message_types(self):
        buttons = InlineKeyboardMarkup(row_width=2)
        buttons.insert(InlineKeyboardButton(text="üìù –¢–µ–∫—Å—Ç üìù", callback_data="SendAll|text"))
        buttons.insert(InlineKeyboardButton(text="‚úâ –î–æ–∫—É–º–µ–Ω—Ç ‚úâ", callback_data="SendAll|document"))
        buttons.insert(InlineKeyboardButton(text="üñº –ö–∞—Ä—Ç–Ω–∏–∫—É üñº", callback_data="SendAll|image"))
        buttons.insert(InlineKeyboardButton(text="üéû –í–∏–¥–µ–æ–∑–∞–ø–∏—Å—å üéû", callback_data="SendAll|video"))
        return buttons

    def home_action_selection(self):
        buttons = InlineKeyboardMarkup(row_width=2)
        buttons.insert(InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="HW_T|check"))
        buttons.insert(InlineKeyboardButton(text="–ù–∞–∑–Ω–∞—á–∏—Ç—å", callback_data="HW_T|assign"))
        return buttons

    def get_past_lessons(self, flow_id):
        buttons = InlineKeyboardMarkup(row_width=2)
        for i in self.db.get_past_lessons_numbers(flow_id):
            buttons.insert(InlineKeyboardButton(text=f"–£—Ä–æ–∫ {i[0]}", callback_data=f"HW_T|num_les {i[0]}"))
        return buttons

    def get_show_hw(self, hw_id):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton(
            text="–ü–æ–∫–∞–∑–∞—Ç—å",
            callback_data=f"HW_S|show|{hw_id}"))
        return buttons

    def get_show_hw_solution(self, hw_id):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton(
            text="–ü–æ–∫–∞–∑–∞—Ç—å",
            callback_data=f"HW_T|solution|{hw_id}"))
        return buttons

    def get_student_send_hw(self, hw_id):
        buttons = InlineKeyboardMarkup(row_width=1)
        buttons.insert(InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f"HW_S|for_confirm|{hw_id}"))
        return buttons

    def get_confirmation(self, hw_id):
        buttons = InlineKeyboardMarkup(row_width=2)
        buttons.insert(InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"HW_T|conf|acp|{hw_id}"))
        buttons.insert(InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"HW_T|conf|rej|{hw_id}"))
        return buttons

    def get_not_done_hw(self, flow_id, student_chat_id):
        buttons = InlineKeyboardMarkup(row_width=2)
        for hw_id, lesson_number in self.db.get_not_done_hw_id(flow_id,student_chat_id):
            buttons.insert(InlineKeyboardButton(text=f"–£—Ä–æ–∫ {lesson_number}", callback_data=f"HW_S|show|{hw_id}"))
        return buttons

    def get_unchecked_lessons(self, flow_id):
        buttons = InlineKeyboardMarkup(row_width=2)
        for lesson_number in self.db.get_unchecked_lessons(flow_id):
            buttons.insert(InlineKeyboardButton(text=f"–£—Ä–æ–∫ {lesson_number}", callback_data=f"HW_T|checkles|{lesson_number}"))
        return buttons

    def get_names_unchecked_lessons(self, flow_id, lesson_number):
        buttons = InlineKeyboardMarkup(row_width=2)
        for name, hw_id in self.db.get_names_for_unchecked_hw(flow_id,lesson_number):
            buttons.insert(InlineKeyboardButton(text=f"{name}", callback_data=f"HW_T|solution|{hw_id}"))
        return buttons